input <- mtcars[, c('mpg', 'cyl')]
print(head(input))
png(file = "boxplot.png")
boxplot(mpg ~ cyl, data = mtcars, xlab = "Number of Cylinders", ylab = "Miles Per Gallon", main = "Mileage Data")
dev.off()
png(file = "boxplot_with_notch.png")
boxplot(mpg ~ cyl, data = mtcars,
xlab = "Number of Cylinders",
ylab = "Miles Per Gallon",
main = "Mileage Data",
notch = TRUE,
varwidth = TRUE,
col = c("green", "yellow", "purple"),
names = c("High", "Medium", "Low")
)
dev.off()
v <- c(9,13,21,8,36,22,12,41,31,33,19)
png(file = "histogram.png")
hist(v, xlab = "Weight", col = "yellow", border = "blue")
dev.off()
png(file = "histogram_lim_breaks.png")
hist(v, xlab = "Weight", col = "green", border = "red", xlim = c(0,40), ylim = c(0,5), breaks = 5)
dev.off()
png(file = "histogram_lim_breaks.png")
hist(v, xlab = "Weight", col = "green", border = "red", xlim = c(0,40), ylim = c(0,5), breaks = 50)
dev.off()
png(file = "histogram_lim_breaks.png")
hist(v, xlab = "Weight", col = "green", border = "red", xlim = c(0,40), ylim = c(0,5), breaks = 10)
dev.off()
png(file = "histogram_lim_breaks.png")
hist(v, xlab = "Weight", col = "green", border = "red", xlim = c(0,40), ylim = c(0,5), breaks = 5)
dev.off()
v <- c(7,12,28,3,41)
png(file = "line_chart.jpg")
plot(v,type = "o")
dev.off()
png(file = "line_chart_label_colored.jpg")
plot(v, type="o", col="red", xlab="Month", ylab="Rain fall", main="Rain fall chart")
dev.off()
t <- c(14,7,6,19,3)
png(file = "line_chart_2_lines.jpg")
plot(v, type="o",col="red", xlab="Month", ylab="Rain fall", main = "Rain fall chart")
lines(t, type = "o", col = "blue") #after plot first line, additional vector input to draw second line
dev.off()
input <- mtcars[,c('wt','mpg')]
print(head(input))
png(file = "scatterplot.png")
# Plot the chart for cars with weight between 2.5 to 5 and mileage between 15 and 30.
plot(x = input$wt,y = input$mpg,
xlab = "Weight",
ylab = "Milage",
xlim = c(2.5,5),
ylim = c(15,30),
main = "Weight vs Milage"
)
dev.off()
## Scatterplot Matrices | Syntax: pairs(formula, data)
# pairs() to create matrice of scatterplots for correlation between two vars
png(file = "scatterplot_matrices.png")
# Plot the matrices between 4 variables giving 12 plots.
# One variable with 3 others and total 4 variables.
pairs(~wt+mpg+disp+cyl,data = mtcars,
main = "Scatterplot Matrix")
dev.off()
library("doBy")
library(ggplot2)
# This is my source code to demonstrate the BDA process
# The data will be processed according to these steps:
#   1. Data Acquisition: the data will be loaded from the dataset provided
#   2. Data Understanding: the data will be looked at given the business environment of the advertisement shown/clicked
#   3. Data Processing: data will be cleaned and categorized and impossible records will be removed from the analysis
#   4. Data Analysis: the processed data will be represented in graphs and tables. Possibly will go back to step 3 to give clearer results
#   5. Data Interpretation: the results of the data analysis and summary will be analyzed looking for one pattern
### 1. Data acquisition -----------------------------------------------------
## Load all available datasets
setwd("C:/Users/wilbert osmond/Documents/XJTLU/CSE313 Big Data Analytics/Assignment 1/Lab 1") # Set to the same directory
filenames <- list.files (path = "C:/Users/wilbert osmond/Documents/XJTLU/CSE313 Big Data Analytics/Assignment 1/Lab 1", pattern = "*.csv") # list all csv files
main_data <- NULL
## Add the first 10 files to the main dataset
for (day in 1:10) {
cat("Loading file nyt", day, ".csv\n", sep="")
dat = read.csv(filenames[day], header=TRUE)
dat$Day <- day # add day column to plot the graphs
if (is.null(main_data)) # first frame is initialized
main_data <- dat
else                    # all following frames are joined
main_data <- rbind(main_data, dat)
}
cat("Data read in successfully\n\n")
### 2a. Data understanding -----------------------------------------------------
# Add a new property (click-through-rate), which represents how many ads of those shown the users click
main_data$CTR <- ifelse(main_data$Impressions==0, 0, main_data$Clicks / main_data$Impressions)
cat("Added Click-Through-Rate attribute to the dataset\n\n")
### 3. Data preprocessing -----------------------------------------------------
## Data cleaning
# Non-signed-in users have assigned default values that will affect the analysis outcome. They will therefore be removed to maintain the analysis quality
main_data <- subset(main_data, Signed_In==1) # extract subset of data with signed-in users as the main data
cat("Non signed-in users have been removed\n\n")
# Remove data with no impressions, because CTR with no impressions must be a mistake since it is not possible for users to click on advertisements that don't show (i.e. wrong data)
main_data <- subset(main_data, Impressions>0) # extract subset of main_data which has impressions > 0
cat("No-impressions data have been removed\n\n")
# Data discretization
### 2b. Data understanding -----------------------------------------------------
# Take a step back and look at the data again to understand it better
# Print the number of men and women under and above the age of 30
cat("Female <=30:", nrow(subset(main_data, Gender==0 & Age <= 30)), "\n")     # 1162100
cat("Male <=30:  ", nrow(subset(main_data, Gender==1 & Age <= 30)), "\n")     # 1422409
cat("Female >30: ", nrow(subset(main_data, Gender==0 & Age > 30)), "\n")      # 3284608
cat("Male >30:   ", nrow(subset(main_data, Gender==1 & Age > 30)), "\n\n")    # 3360850
# The populations are very similar when comparing males and females in the same age category. This allows us to fairly compare their properties.
### 4. Data analysis -----------------------------------------------------
# There are two age categories: youngsters and adults. The threshold is arbitrarily set at the age of 30 years
# Since the populations are similar when comparing the two genders in the same age category,
# the two will be compared to see which gender clicks the most advertisements.
# The best metric is the Click-Through-Rate: the rate of which a user clicks on the advertisement when they see it (impressions)
# I have chosen to consider more than 1 out of 4 advertisements shown clicked (i.e. CTR>0.25) as being a sign that a user is interested in the advertisements proposed.
# Plots over 31 days
ggplot(subset(main_data, Age<30 & CTR>0.25), aes(x=factor(Day), fill=factor(Gender))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users under the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("hotpink","turquoise"), labels = c("Female", "Male")) +
xlab("Day") + ylab("Number of users")
ggplot(subset(main_data, 30<Age & CTR>0.25), aes(x=factor(Day), fill=factor(Gender))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users above the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("hotpink","turquoise"), labels = c("Female", "Male")) +
xlab("Day") + ylab("Number of users")
ggplot(subset(main_data), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users above the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("yellow", "green", "hotpink","turquoise"), labels = c("<18", "18-50", "50-65","65<")) +
xlab("Day") + ylab("Number of users")
#
data1 <- subset(main_data, CTR>0)
main_data$agecat <- cut(main_data$Age,c(0, 30, 50, 65, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=data1, FUN=siterange)
# CTR quantiles are 0 because clicks quantiles are also 0 (too small)
### 5. Data Interpretation -----------------------------------------------------
# The two graphs above show how, until the age of 30, men are more interested in the advertisements shown
# When the age increases, however, women become more interested than men.
cat("\nUntil the age of 30, men are more interested in the advertisements. After 30, women are.")
main_data$agecat <- cut(main_data$Age,c(0, 30, 50, 65, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
data1 <- subset(main_data, CTR>0)
data1$agecat <- cut(data1$Age,c(0, 30, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=data1, FUN=siterange)
data1 <- subset(main_data, CTR>0)
data1$agecat <- cut(data1$Age,c(0, 30, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat+Gender, data=data1, FUN=siterange)
main_data$agecat <- cut(main_data$Age,c(0, 30, Inf))
data1$agecat <- cut(data1$Age,c(0, 30, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat+Gender, data=main_data, FUN=siterange)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 65, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 60, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 60))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
ggplot(subset(main_data), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users above the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "yellow","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
ggplot(subset(main_data), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users above the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "hotpink","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
data1 <- subset(main_data, CTR>0)
data1$agecat <- cut(data1$Age,c(0, 30, 45, 60))
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 60))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=data1, FUN=siterange)
ggplot(subset(main_data), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users above the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "hotpink","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
data1$agecat <- cut(data1$Age,c(0, 30, Inf))
main_data$agecat <- cut(main_data$Age,c(0, 30, Inf))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=data1, FUN=siterange)
summaryBy(CTR~agecat+Gender, data=data1, FUN=siterange)
data1 <- subset(main_data, CTR>0)
data1$agecat <- cut(data1$Age,c(0, 30, 45, 60))
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 60))
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=data1, FUN=siterange)
ggplot(subset(main_data, CTR>0), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users above the age of 30 interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "hotpink","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
ggplot(subset(main_data, CTR>0), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users of different age groups interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "hotpink","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 65))
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
cat("Youngsters (0-30):", nrow(subset(main_data, 0 <= Age <= 30)), "\n")     # 1162100
cat("Adults (30-45):  ", nrow(subset(main_data, 30 <= Age <= 45)), "\n")     # 1422409
cat("Middle-aged adults (45-60): ", nrow(subset(main_data, 45 <= Age <= 60)), "\n")      # 3284608
cat("Youngsters (0-30):", nrow(subset(main_data, 0 < Age <= 30)), "\n")     # 1162100
cat("Adults (30-45):  ", nrow(subset(main_data, 30 < Age <= 45)), "\n")     # 1422409
cat("Middle-aged adults (45-60): ", nrow(subset(main_data, 45 < Age <= 60)), "\n")      # 3284608
cat("Youngsters (0-30):", nrow(subset(main_data, Age>0 & Age<=30)), "\n")     # 1162100
cat("Adults (30-45):  ", nrow(subset(main_data, Age>30 & Age<=45)), "\n")     # 1422409
cat("Middle-aged adults (45-60): ", nrow(subset(main_data, Age>45 & Age<=60)), "\n")      # 3284608
is.null(subset(main_data, Age<0))
cat("\nBetween ages 30 and 45, users are most interested in the advertisements shown.")
library("doBy")
library(ggplot2)
# This is my source code to demonstrate the BDA process
# The data will be processed according to these steps:
#   1. Data Acquisition: the data will be loaded from the dataset provided
#   2. Data Understanding: the data will be looked at given the business environment of the advertisement shown/clicked
#   3. Data Processing: data will be cleaned and categorized and impossible records will be removed from the analysis
#   4. Data Analysis: the processed data will be represented in graphs and tables. Possibly will go back to step 3 to give clearer results
#   5. Data Interpretation: the results of the data analysis and summary will be analyzed looking for one pattern
### 1. Data acquisition -----------------------------------------------------
## Load all available datasets
setwd("C:/Users/wilbert osmond/Documents/XJTLU/CSE313 Big Data Analytics/Assignment 1/Lab 1") # Set to the same directory
filenames <- list.files (path = "C:/Users/wilbert osmond/Documents/XJTLU/CSE313 Big Data Analytics/Assignment 1/Lab 1", pattern = "*.csv") # list all csv files
main_data <- NULL
## Add the first 10 files to the main dataset
for (day in 1:10) {
cat("Loading file nyt", day, ".csv\n", sep="")
dat = read.csv(filenames[day], header=TRUE)
dat$Day <- day # add day column to plot the graphs
if (is.null(main_data)) # first frame is initialized
main_data <- dat
else                    # all following frames are joined
main_data <- rbind(main_data, dat)
}
cat("Data read in successfully\n\n")
### 2a. Data understanding -----------------------------------------------------
# Check if there is any data with age below 0
is.null(subset(main_data, Age<0))
cat("There is data with age below 0. We will remove this later\n\n")
# Add a new property (click-through-rate), which represents the rate of how much a user clicks on the advertisement after they view it
main_data$CTR <- main_data$Clicks / main_data$Impressions
cat("Added Click-Through-Rate attribute to the dataset\n\n")
### 3. Data preprocessing -----------------------------------------------------
## Data cleaning
# Non-signed-in users have assigned default values that will affect the analysis outcome. They will therefore be removed to maintain the analysis quality
main_data <- subset(main_data, Signed_In==1) # extract subset of data with signed-in users as the main data
cat("Non signed-in users have been removed\n\n")
# Remove data with no impressions, because CTR with no impressions must be a mistake since it is not possible for users to click on advertisements that don't show (i.e. wrong data)
main_data <- subset(main_data, Impressions>0) # extract subset of main_data which has impressions above 0
cat("No-impressions data have been removed\n\n")
# Remove data with ages below 0, as this is impossible and unrealistic
main_data <- subset(main_data, Age>0) # extract subset of main_data which has age above 0
# Data discretization: grouping age ranges to 0-30 (youngsters), 30-45 (adults), 45-60 (middle-aged adults)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 60))
# Create a separate subset, along with the same age category, for CTR > 0 later on
dataCTR <- subset(main_data, CTR>0)
### 2b. Data understanding -----------------------------------------------------
# Take a step back and look at the data again to understand it better
# Print the number of users in the three age groups
cat("Youngsters (0-30):", nrow(subset(main_data, Age>0 & Age<=30)), "\n")     # 860667
cat("Adults (30-45):  ", nrow(subset(main_data, Age>30 & Age<=45)), "\n")     # 923952
cat("Middle-aged adults (45-60): ", nrow(subset(main_data, Age>45 & Age<=60)), "\n")      # 841378
cat("The populations of the three age categories are similar. This enables us to more fairly compare their properties. \n\n")
### 4. Data analysis -----------------------------------------------------
# There are three age categories: youngsters, adults, and middle-aged adults. The thresholds are arbitrarily set to ensure similar population sizes and related to general age category concepts.
# Since the three population sizes are similar, we will compare the three to see which of the age category has the highest response rate to advertisements.
# The best metric is the Click-Through-Rate: the rate of which a user clicks on the advertisement when they see it (impressions)
# I have chosen to consider CTR>0 as being a sign that a user is interested in the advertisements proposed.
# Plot over 10 days
ggplot(subset(main_data, CTR>0), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users of different age groups interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "hotpink","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
# Create function metrics that summarize the data for CTR attribute, and compare them with the three different age groups
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=main_data, FUN=siterange)
# CTR quantiles are 0 because clicks quantiles are also 0 (too small)
### 5. Data Interpretation -----------------------------------------------------
# The graph above show how, between ages 30 and 45, users are most interested in the advertisements shown.
# On the other hand, youngsters' (0-30) and middle-aged adults' (45-60) interests do not significantly differ.
cat("\nBetween ages 30 and 45, users are most interested in the advertisements shown.")
cat("\nOn the other hand, youngsters' (0-30) and middle-aged adults' (45-60) interests do not significantly differ.")
summaryBy(CTR~agecat, data=dataCTR, FUN=siterange)
setwd("C:/Users/wilbert osmond/Documents/XJTLU/CSE313 Big Data Analytics/Assignment 1/Lab 1") # Set to the same directory
filenames <- list.files (pattern = "*.csv") # list all csv files
main_data <- NULL
## Add the first 10 files to the main dataset
for (day in 1:10) {
cat("Loading file nyt", day, ".csv\n", sep="")
dat = read.csv(filenames[day], header=TRUE)
dat$Day <- day # add day column to plot the graphs
if (is.null(main_data)) # first frame is initialized
main_data <- dat
else                    # all following frames are joined
main_data <- rbind(main_data, dat)
}
cat("Data read in successfully\n\n")
### 2a. Data understanding -----------------------------------------------------
# Check if there is any data with age below 0
is.null(subset(main_data, Age<0))
cat("There is data with age below 0. We will remove this later\n\n")
# Add a new property (click-through-rate), which represents the rate of how much a user clicks on the advertisement after they view it
main_data$CTR <- main_data$Clicks / main_data$Impressions
cat("Added Click-Through-Rate attribute to the dataset\n\n")
### 3. Data preprocessing -----------------------------------------------------
## Data cleaning
# Non-signed-in users have assigned default values that will affect the analysis outcome. They will therefore be removed to maintain the analysis quality
main_data <- subset(main_data, Signed_In==1) # extract subset of data with signed-in users as the main data
cat("Non signed-in users have been removed\n\n")
# Remove data with no impressions, because CTR with no impressions must be a mistake since it is not possible for users to click on advertisements that don't show (i.e. wrong data)
main_data <- subset(main_data, Impressions>0) # extract subset of main_data which has impressions above 0
cat("No-impressions data have been removed\n\n")
# Remove data with ages below 0, as this is impossible and unrealistic
main_data <- subset(main_data, Age>0) # extract subset of main_data which has age above 0
cat("Negative-age data have been removed\n\n")
# Data discretization: grouping age ranges to 0-30 (youngsters), 30-45 (adults), 45-60 (middle-aged adults)
main_data$agecat <- cut(main_data$Age,c(0, 30, 45, 60))
cat("Age has been discretized to three age categories\n\n")
# Create a separate subset, along with the same age category, for CTR > 0 later on
dataCTR <- subset(main_data, CTR>0)
### 2b. Data understanding -----------------------------------------------------
# Take a step back and look at the data again to understand it better
# Print the number of users in the three age groups
cat("Youngsters (0-30):", nrow(subset(main_data, Age>0 & Age<=30)), "\n")     # 860667
cat("Adults (30-45):  ", nrow(subset(main_data, Age>30 & Age<=45)), "\n")     # 923952
cat("Middle-aged adults (45-60): ", nrow(subset(main_data, Age>45 & Age<=60)), "\n")      # 841378
cat("The populations of the three age categories are similar. This enables us to more fairly compare their properties. \n\n")
### 4. Data analysis -----------------------------------------------------
# There are three age categories: youngsters, adults, and middle-aged adults. The thresholds are arbitrarily set to ensure similar population sizes and related to general age category concepts.
# Since the three population sizes are similar, we will compare the three to see which of the age category has the highest response rate to advertisements.
# The best metric is the Click-Through-Rate: the rate of which a user clicks on the advertisement when they see it (impressions)
# I have chosen to consider CTR>0 as being a sign that a user is interested in the advertisements proposed.
# Plot over 10 days
ggplot(subset(main_data, CTR>0), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users of different age groups interested in the advertisements shown") +
scale_fill_manual("Gender\n", values = c("green", "hotpink","turquoise"), labels = c("<30", "30-45", "45-65")) +
xlab("Day") + ylab("Number of users")
# Create function metrics that summarize the data for CTR attribute, and compare them with the three different age groups
siterange <- function(x){c(length(x), quantile(x), mean(x), var(x))}
summaryBy(CTR~agecat, data=dataCTR, FUN=siterange)
# CTR quantiles are 0 because clicks quantiles are also 0 (too small)
### 5. Data Interpretation -----------------------------------------------------
# The graph above show how, between ages 30 and 45, users are most interested in the advertisements shown.
# On the other hand, youngsters' (0-30) and middle-aged adults' (45-60) interests do not significantly differ.
cat("\nBetween ages 30 and 45, users are most interested in the advertisements shown.On the other hand, youngsters' (0-30) and middle-aged adults' (45-60) interests do not significantly differ.")
# Plot over 10 days
ggplot(subset(main_data, CTR>0), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Interested Users", subtitle = "Users of different age groups interested in the advertisements shown") +
scale_fill_manual("Age category\n", values = c("green", "hotpink","turquoise"), labels = c("youngsters", "adults", "middle-aged adults")) +
xlab("Day") + ylab("Number of users")
# Plot over 10 days
ggplot(subset(main_data, CTR>0), aes(x=factor(Day), fill=factor(agecat))) +
geom_histogram(stat="count", position="dodge") +
ggtitle("Users of different age groups interested in the advertisements shown") +
scale_fill_manual("Age category\n", values = c("green", "hotpink","turquoise"), labels = c("youngsters", "adults", "middle-aged adults")) +
xlab("Day") + ylab("Number of users")
